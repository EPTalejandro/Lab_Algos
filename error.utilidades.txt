Tarea_4/Utilidades.java:15: verify: The prover cannot establish an assertion (ArithmeticOperationRange) in method diferenciaSimetricaConjuntos: overflow in int sum
        ArrayList<Integer> numerosDifSim = new ArrayList<>(a.length + b.length);
                                                                    ^
Tarea_4/Utilidades.java:40: verify: The prover cannot establish an assertion (Postcondition: Tarea_4/Utilidades.java:9:) in method diferenciaSimetricaConjuntos
        return c;
        ^
Tarea_4/Utilidades.java:9: verify: Associated declaration: Tarea_4/Utilidades.java:40:
      @ ensures a.length + b.length < Integer.MAX_VALUE;
        ^
Tarea_4/Utilidades.java:91: verify: The prover cannot establish an assertion (Postcondition: Tarea_4/Utilidades.java:88:) in method esSubconjunto
        if(a.length > b.length) return false;
                                ^
Tarea_4/Utilidades.java:88: verify: Associated declaration: Tarea_4/Utilidades.java:91:
      @ ensures \result <==> (\forall int i; 0 <= i && i < a.length; (\exists int j; 0 <= j && j < b.length; a[i] == b[j]));
        ^
Tarea_4/Utilidades.java:126: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \num_of
      @             (\num_of int i; 0 <= i && i < a.length; a[i] == a[z]) ==
                     ^
Tarea_4/Utilidades.java:127: warning: NOT IMPLEMENTED: Not yet supported feature in converting BasicPrograms to SMTLIB: JML Quantified expression using \num_of
      @             (\num_of int i; 0 <= i && i < \old(a.length); \old(a[i]) == a[z]));
                     ^
Tarea_4/Utilidades.java:129: verify: The prover cannot establish an assertion (Postcondition: Tarea_4/Utilidades.java:122:) in method particionMenoresMayores
    public static void particionMenoresMayores(int[] a, int x){
                       ^
Tarea_4/Utilidades.java:122: verify: Associated declaration: Tarea_4/Utilidades.java:129:
      @ ensures (\exists int k; 0 <= k && k < a.length; 
        ^
Tarea_4/Utilidades.java:111: verify: The prover cannot establish an assertion (LoopInvariant) in method rotarArreglo
          @ maintaining (\forall int j; i + 1 < j && j < a.length; a[j] == \old(a[j - 1]));
            ^
Tarea_4/Utilidades.java:107: verify: The prover cannot establish an assertion (Postcondition: Tarea_4/Utilidades.java:104:) in method rotarArreglo
    public static void rotarArreglo(int[] a){
                       ^
Tarea_4/Utilidades.java:104: verify: Associated declaration: Tarea_4/Utilidades.java:107:
      @ ensures (\forall int i ; 1 <= i && i < a.length; a[i] == \old(a[i - 1])) &&
        ^
Tarea_4/Utilidades.java:80: error: A catastrophic JML internal error occurred.  Please report the bug with as much information as you can.
                traspuesta[j][i] = matriz [i][j];
                           ^
  Reason: Double rewriting of ident: j j_3432_3432___14 j_3432_3461___29
1 error
2 warnings
10 verification failures
